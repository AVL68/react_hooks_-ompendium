{"version":3,"sources":["common/assets/icons.svg","common/IconsSVG.js","common/ReactjsOrg.js","common/WatchVideoLessonFromSecond.js","Lesson00/Intro.js","common/СodeHowText.js","common/GitHubFile.js","common/HeaderForExampl.js","Lesson01/L01_01_CounterBase.js","Lesson01/L01_02_CounterAsynchronousExample.js","Lesson01/L01_03_CounterCompute.js","Lesson01/L01_04_StateObject.js","Lesson01/L01_listOfContent.js","Lesson01/Lesson01.js","Lesson02/L02_01_baseUse.js","Lesson02/L02_02_secondArgument.js","Lesson02/L02_03_FetchPlaceholder.js","Lesson02/L02_04_DidMountUsers.js","Lesson02/L02_04_DidMount.js","Lesson02/L02_05_WillUnmount.js","Lesson02/L02_listOfContent.js","Lesson02/Lesson02.js","Lesson03/L03_01_useEffect.js","Lesson03/L03_02_let.js","Lesson03/L03_03_useRef.js","Lesson03/L03_04_reference.js","Lesson03/L03_05_focus.js","Lesson03/L03_06_prevState.js","Lesson03/L03_listOfContent.js","Lesson03/Lesson03.js","Lesson04/L04_01_42.js","Lesson04/L04_02_useMemo.js","Lesson04/L04_03_object.js","Lesson04/L04_04_useMemoForObject.js","Lesson04/L04_listOfContent.js","Lesson04/Lesson04.js","Lesson05/L05_01_DynamicList_Items.js","Lesson05/L05_01_DynamicList.js","Lesson05/L05_01_DynamicList_useCallback.js","Lesson05/L05_listOfContent.js","Lesson05/Lesson05.js","Lesson06/L06_01_useContextBase/Main.js","Lesson06/L06_01_useContextBase/Alert.js","Lesson06/L06_01_useContextBase/L06_01_useContextBase.js","Lesson06/L06_02_useContextImproved/alert/AlertContext.js","Lesson06/L06_02_useContextImproved/Main.js","Lesson06/L06_02_useContextImproved/alert/Alert.js","Lesson06/L06_02_useContextImproved/L06_02_useContextImproved.js","Lesson06/L06_03_useContextObject/alert/AlertContext.js","Lesson06/L06_03_useContextObject/Main.js","Lesson06/L06_03_useContextObject/alert/Alert.js","Lesson06/L06_03_useContextObject/L06_03_useContextObject.js","Lesson06/L06_listOfContent.js","Lesson06/Lesson06.js","Lesson07/L07_01_useReducer/alert/AlertContext.js","Lesson07/L07_01_useReducer/Main.js","Lesson07/L07_01_useReducer/alert/Alert.js","Lesson07/L07_01_useReducer/L07_01_useReducer.js","Lesson07/L07_listOfContent.js","Lesson07/Lesson07.js","Lesson08/L08_01_Direction.js","Lesson08/L08_02_MyHookLogger.js","Lesson08/L08_03_MyHookInput.js","Lesson08/L08_04_MyHookClear.js","Lesson08/L08_listOfContent.js","Lesson08/Lesson08.js","App.js","reportWebVitals.js","index.js"],"names":["IconsSVG","className","iconsID","width","height","xlinkHref","iconsSVG","ReactjsOrg","href","text","target","rel","data-toggle","data-placement","title","WatchVideoLessonFromSecond","second","Intro","style","textAlign","СodeHowText","codeText","map","value","i","whiteSpace","GitHubFile","HeaderForExampl","seeExampl","setSeeExampl","label","labelAdd","WVLFSecond","GHFile","checked","onChange","type","id","cursor","htmlFor","fontSize","L01CounterBase","useState","counter","setCounter","onClick","L01CounterAsynchronousExample","previous","computeInitialCounter","console","log","Math","trunc","random","L01CounterCompute","counter1","setCounter1","counter2","setCounter2","L01StateObject","date","Date","now","state","setstate","prev","JSON","stringify","L01_listOfContent","seeExampl01","setSeeExampl01","seeExampl02","setSeeExampl02","seeExampl03","setSeeExampl03","seeExampl04","setSeeExampl04","L01_01_CounterBase","L01_02_CounterAsynchronousExample","L01_03_CounterCompute","L01_04_StateObject","Lesson01","L02_01_baseUse","setType","useEffect","L02_02_secondArgument","color","setColor","L02_03_FetchPlaceholder","data","setData","fetch","then","response","json","maxHeight","overflow","L02_04_DidMountUsers","deleteElement","marginTop","scope","row","key","name","username","email","address","street","suite","city","zipcode","phone","L02_04_DidMount","users","setUsers","todos","setTodos","posts","setPosts","total","setTotal","length","curentStateResource","temporary","splice","disabled","setState","L02_05_WillUnmount","x","y","mouseMoveHandler","event","clientX","clientY","window","addEventListener","removeEventListener","L02_listOfContent","seeExampl05","setSeeExampl05","Lesson02","L03_01_useEffect","renderCount","setRenderCount","L03_02_let","setValue","e","L03_03_useRef","useRef","current","L03_04_reference","inputRef","ref","L03_05_focus","focus","L03_06_prevState","prevValue","L03_listOfContent","seeExampl06","setSeeExampl06","role","Lesson03","L04_01_42","number","setNumber","colored","setColored","computed","num","complexCompute","L04_02_useMemo","useMemo","L04_03_object","styleColor","L04_04_useMemoForObject","L04_listOfContent","Lesson04","L05_01_DynamicList_Items","getItems","items","setItems","newItems","L05_01_DynamicList","count","setCount","Array","fill","_","L05_01_DynamicList_useCallback","generateItemsFromAPI","useCallback","L05_listOfContent","Lesson05","Main","toggle","Alert","useContext","AlertContext","React","createContext","L06_01_useContextBase","alert","setAlert","Provider","AlertTogleContext","AlertProvider","children","L06_02_useContextImproved","useAlert","visible","L06_03_useContextObject","L06_listOfContent","Lesson06","SHOW_ALERT","HIDE_ALERT","reducer","action","useReducer","dispatch","show","hide","L07_01_useReducer","L07_listOfContent","Lesson07","L08_01_Direction","setName","lastName","setlastName","placeholder","useLogger","L08_02_MyHookLogger","useInput","initialValue","L08_03_MyHookInput","bind","clear","L08_04_MyHookClear","L08_listOfContent","Lesson08","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f48e3759.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icons.fc4aa26c.svg\";","import React from \"react\";\r\nimport iconsSVG from \"../common/assets/icons.svg\";\r\n\r\nexport default function IconsSVG({ className = \"\", iconsID = \"\", width=\"1em\", height=\"1em\"}) {\r\n    return (\r\n        <svg className={className} width={width} height={height} >\r\n            <use xlinkHref={`${iconsSVG}#${iconsID}`} />\r\n        </svg>\r\n    );\r\n}","import React from \"react\";\r\nimport IconsSVG from \"../common/IconsSVG\";\r\n\r\nfunction ReactjsOrg({ href = \"#\", text = \"\" }) {\r\n  return (\r\n    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Смотреть документацию\">\r\n      {text}\r\n      <IconsSVG iconsID=\"react-file\" width=\"1em\" height=\"0.9em\" className={\"bi\"}/>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default ReactjsOrg;\r\n","import React from \"react\";\r\nimport IconsSVG from \"../common/IconsSVG\";\r\n\r\nfunction WatchVideoLessonFromSecond({ second = 1, text = \"\" }) {\r\n  return (\r\n    <a href={`https://youtu.be/9KJxaFHotqI?t=${second}`} target=\"_blank\" rel=\"noopener noreferrer\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Смотреть видео\" >\r\n      <span>{text}</span>\r\n      <IconsSVG iconsID=\"file-play\" width=\"1em\" height=\"0.65em\" className={\"bi\"}/>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default WatchVideoLessonFromSecond;\r\n","import React from \"react\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\nimport WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\n\r\nexport default function Intro() {\r\n  return (\r\n    <>\r\n      <h1 style={{ textAlign: \"center\" }}>Конспект, шпаргалка по хукам в React.</h1>\r\n\r\n      <p>\r\n        Основан на курсе React Hooks -\r\n        <WatchVideoLessonFromSecond second={1} text=\" Полный Курс (Про Все Хуки!) от Владилен Минин\" />\r\n        Дополнительная информация с\r\n        <ReactjsOrg href=\"https://ru.reactjs.org/\" text=\" https://ru.reactjs.org/\" />\r\n      </p>\r\n      <p> Основная идея react компонент: есть определенный стейт, объект описывающий состояние компонента. Если он меняется, react непосредственно перерисовывает ту область, где этот стейт выводится.</p>\r\n      <p>\r\n        Для взаимодействия со стейт-ом в функциональных компонентах используются хуки. Хуки - это просто абсолютно изолированный функции, их предоставляет react, которые позволяют полностью имплементировать весь\r\n        функционал react в базовых функциональных компонентах.\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nconst СodeHowText = ({ codeText = [] }) => {\r\n  return codeText.map((value, i) => (\r\n    <code key={i} className=\"text_code\" style={{whiteSpace: \"pre-wrap\"}}>\r\n      {value}\r\n    </code>\r\n  ));\r\n};\r\nexport default СodeHowText;\r\n","import React from \"react\";\r\nimport IconsSVG from \"../common/IconsSVG\";\r\n\r\nfunction GitHubFile({ href = \"#\" }) {\r\n  return (\r\n    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Смотреть код на GitHub\">\r\n      <IconsSVG iconsID=\"git-file\" width=\"1em\" height=\"0.65em\" className={\"bi\"}/>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default GitHubFile;\r\n","import React from \"react\";\r\nimport WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\nimport GitHubFile from \"../common/GitHubFile\";\r\n\r\nexport const HeaderForExampl = ({ seeExampl = false, setSeeExampl = null, label = \"\", labelAdd = \"\", WVLFSecond = 0, GHFile = \"\" }) => {\r\n  return (\r\n    <h3>\r\n      <span className=\"form-group form-check\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Смотреть пример\">\r\n        <input checked={seeExampl} onChange={() => setSeeExampl(!seeExampl)} type=\"checkbox\" className=\"form-check-input\" id={GHFile} style={{ cursor: \"pointer\" }}></input>\r\n        <label className=\"form-check-label\" htmlFor={GHFile} style={{ cursor: \"pointer\" }}>\r\n          {label}\r\n          <span style={{ fontSize: 18 }}>{labelAdd}</span>\r\n        </label>\r\n        <WatchVideoLessonFromSecond second={WVLFSecond} />\r\n        <GitHubFile href={GHFile} />\r\n      </span>\r\n    </h3>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nfunction L01CounterBase() {\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  function increment() {\r\n    setCounter(counter + 1);\r\n  }\r\n\r\n  function decrement() {\r\n    setCounter(counter - 1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow\" style={{ width: \"15.3rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4> Счетчик: {counter}</h4>\r\n          <button onClick={increment} className=\"btn btn-primary mr-1\">\r\n            Добавить 1\r\n          </button>\r\n          <button onClick={decrement} className=\"btn btn-success\">\r\n            Убрать 1\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default L01CounterBase;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction L01CounterAsynchronousExample() {\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  function incrementAsynchonous() {\r\n    setCounter(counter + 1);\r\n    setCounter(counter + 1);\r\n  }\r\n\r\n  function increment() {\r\n    setCounter((previous) => previous + 1);\r\n    setCounter((previous) => previous + 1);\r\n  }\r\n\r\n  function decrement() {\r\n    setCounter(counter - 1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow\" style={{ width: \"22.4rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4> Счетчик: {counter}</h4>\r\n          <button onClick={incrementAsynchonous} className=\"btn btn-danger mr-1\">\r\n            Добавить 2\r\n          </button>\r\n          <button onClick={increment} className=\"btn btn-primary mr-1\">\r\n            Добавить 2\r\n          </button>\r\n          <button onClick={decrement} className=\"btn btn-success\">\r\n            Убрать 1\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default L01CounterAsynchronousExample;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction computeInitialCounter(counter) {\r\n  console.log(`Some calculations ${counter}...`);\r\n  return Math.trunc(Math.random() * 20);\r\n}\r\n\r\nfunction L01CounterCompute() {\r\n  const [counter1, setCounter1] = useState(computeInitialCounter(\"1\"));\r\n  const [counter2, setCounter2] = useState(() => computeInitialCounter(\"2\"));\r\n\r\n  function increment() {\r\n    setCounter1(counter1 + 1);\r\n    setCounter2(counter2 + 1);\r\n  }\r\n\r\n  function decrement() {\r\n    setCounter1(counter1 - 1);\r\n    setCounter2(counter2 - 1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow\" style={{ width: \"15.3rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4> Счетчик 1: {counter1}</h4>\r\n          <h4> Счетчик 2: {counter2}</h4>\r\n          <button onClick={increment} className=\"btn btn-primary mr-1\">\r\n            Добавить 1\r\n          </button>\r\n          <button onClick={decrement} className=\"btn btn-success\">\r\n            Убрать 1\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default L01CounterCompute;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction L01StateObject() {\r\n  const [state, setstate] = useState({\r\n    title: \"Счетчик\",\r\n    date: Date.now(),\r\n  });\r\n\r\n  function updateTitle() {\r\n    setstate((prev) => {\r\n      return { ...prev, title: \"Новый заголовок по синей кнопке\" };\r\n    });\r\n  }\r\n\r\n  function resetObject() {\r\n    setstate({\r\n      title: \"Счетчик\",\r\n      date: Date.now(),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow \" style={{ width: \"27.4rem\" }}>\r\n        <div className=\"card-body\">\r\n          <button onClick={() => setstate({ title: \"Новый заголовок по красной кнопке\" })} className=\"btn btn-danger mr-1\">\r\n            Изменить title\r\n          </button>\r\n          <button onClick={updateTitle} className=\"btn btn-primary mr-1\">\r\n            Изменить title\r\n          </button>\r\n          <button onClick={resetObject} className=\"btn btn-success\">\r\n            Восстановить\r\n          </button>\r\n          <br />\r\n          <div>\r\n            <pre>{JSON.stringify(state, null, 2)}</pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default L01StateObject;\r\n","import React, { useState } from \"react\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\nimport CodeHowText from \"../common/СodeHowText\";\r\nimport { HeaderForExampl } from \"../common/HeaderForExampl\";\r\nimport L01_01_CounterBase from \"./L01_01_CounterBase\";\r\nimport L01_02_CounterAsynchronousExample from \"./L01_02_CounterAsynchronousExample\";\r\nimport L01_03_CounterCompute from \"./L01_03_CounterCompute\";\r\nimport L01_04_StateObject from \"./L01_04_StateObject\";\r\n\r\nexport const L01_listOfContent = () => {\r\n  const [seeExampl01, setSeeExampl01] = useState(false);\r\n  const [seeExampl02, setSeeExampl02] = useState(false);\r\n  const [seeExampl03, setSeeExampl03] = useState(false);\r\n  const [seeExampl04, setSeeExampl04] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl01}\r\n        setSeeExampl={setSeeExampl01}\r\n        label=\"Первый пример. \"\r\n        labelAdd=\"Базовое применение.\"\r\n        WVLFSecond={294}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson01/L01_01_CounterBase.js\"\r\n      />\r\n      {seeExampl01 ? (\r\n        <>\r\n          <p>\r\n            Значение счетчика добавляем в состояние компоненты.\r\n            <CodeHowText codeText={[`const [counter, setCounter] = useState(0);`]} />\r\n          </p>\r\n          <p>\r\n            Кнопками меняем значение счетчика на 1.\r\n            <CodeHowText codeText={[`function increment() { setCounter(counter + 1);`, `<button onClick={increment} className=\"btn btn-success\"> Добавить </button>`]} />\r\n          </p>\r\n          <L01_01_CounterBase />\r\n        </>\r\n      ) : null}\r\n\r\n      <h4>Дополнительно:</h4>\r\n      <p>Для инициализаии состояния, useState используем в начале компоненты.</p>\r\n      <p>\r\n        Не используйте хуки внутри циклов, условных операторов или вложенных функций.\r\n        <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-rules.html#only-call-hooks-at-the-top-level\" />\r\n      </p>\r\n      <p>Использовать useState для инициализации нового состояния в компоненте можно сколько сколько угодно раз.</p>\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl02}\r\n        setSeeExampl={setSeeExampl02}\r\n        label=\"Второй пример. \"\r\n        labelAdd=\"Хук useState работает асинхронно.\"\r\n        WVLFSecond={741}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson01/L01_02_CounterAsynchronousExample.js\"\r\n      />\r\n\r\n      {seeExampl02 ? (\r\n        <>\r\n          <L01_02_CounterAsynchronousExample />\r\n          <p>\r\n            По красной кнопке счетчик не увеличивается на 2, так как используется текущее состояние.\r\n            <CodeHowText codeText={[`function incrementAsynchonous() {`, `setCounter(counter + 1);`, `setCounter(counter + 1);`]} />\r\n          </p>\r\n          <p>\r\n            По синей кнопке счетчик увеличивается на 2, так как используется предыдущее состояние.\r\n            <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-reference.html#functional-updates\" />\r\n            <CodeHowText codeText={[`function increment() {`, `setCounter((previous) => previous + 1);`, `setCounter((previous) => previous + 1);`]} />\r\n          </p>\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl03}\r\n        setSeeExampl={setSeeExampl03}\r\n        label=\"Третий пример.\"\r\n        WVLFSecond={907}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson01/L01_03_CounterCompute.js\"\r\n      />\r\n\r\n      {seeExampl03 ? (\r\n        <>\r\n          <p>Чтобы увидеть результаты начального рендеринга счетчиков откройте консоль браузера.</p>\r\n          <L01_03_CounterCompute />\r\n          <p>\r\n            Обратите внимание, что рендеринг первого и второго счетчика отличаются.\r\n            <br />\r\n            Функция расчета первоначального состояния первого счетчика выполняется при каждом изменении состояния.\r\n            <CodeHowText codeText={['const [counter1, setCounter1] = useState(computeInitialCounter(\"1\"));']} />\r\n            Функция расчета первоначального состояния второго счетчика выполняется один раз.\r\n            <CodeHowText codeText={['const [counter2, setCounter2] = useState(() => computeInitialCounter(\"2\"));']} />\r\n            Начальное состояние можно вычислять посредством функции, которая будет выполняться только при начальном рендеринге.\r\n            <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-reference.html#lazy-initial-state\" />\r\n          </p>\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl04}\r\n        setSeeExampl={setSeeExampl04}\r\n        label=\"Четвертый пример. \"\r\n        labelAdd=\"Стейт описан в формате объекта.\"\r\n        WVLFSecond={1083}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson01/L01_04_StateObject.js\"\r\n      />\r\n\r\n      {seeExampl04 ? (\r\n        <>\r\n          <p>\r\n            <CodeHowText codeText={[`const [state, Setstate] = useState({`, `title: \"Счетчик\",`, `date: Date.now(), });`]} />\r\n          </p>\r\n\r\n          <L01_04_StateObject />\r\n          <p>Хук useState не объединяет объекты обновления автоматически.</p>\r\n          <p>\r\n            По красной кнопке объект полностью заменился на новый.\r\n            <CodeHowText codeText={[`setstate({ title: \"Новый заголовок по красной кнопке\" })`]} />\r\n          </p>\r\n          <p>\r\n            По синей кнопке изменился только title.\r\n            <CodeHowText codeText={[`setstate((prev) => { return { ...prev, title: \"Новый заголовок по синей кнопке\" } });`]} />\r\n          </p>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\nimport { L01_listOfContent } from \"./L01_listOfContent\";\r\nimport CodeHowText from \"../common/СodeHowText\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\n\r\nexport default function Lesson01() {\r\n  return (\r\n    <>\r\n      <h2>\r\n        1. Первый базовый хук useState.\r\n        <WatchVideoLessonFromSecond second={278} />\r\n      </h2>\r\n      <p>Он наделяет наш функциональный компонент внутренним состоянием.\r\n        Возвращает значение с состоянием и функцию для его обновления.\r\n        <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-reference.html#usestate\" />\r\n        <CodeHowText codeText={[`const [state, setState] = useState(initialState);`]} />\r\n      </p>\r\n      <L01_listOfContent />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport const L02_01_baseUse = () => {\r\n  const [type, setType] = useState(\"users\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"render from useEffect\");\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow \" style={{ width: \"20rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4> Ресурс: {type}</h4>\r\n          <button onClick={() => setType(\"users\")} className=\"btn btn-outline-info mr-1\">\r\n            Пользователи\r\n          </button>\r\n          <button onClick={() => setType(\"todo\")} className=\"btn btn-outline-info mr-1\">\r\n            Todo\r\n          </button>\r\n          <button onClick={() => setType(\"posts\")} className=\"btn btn-outline-info\">\r\n            Посты\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport const L02_02_secondArgument = () => {\r\n  const [type, setType] = useState(\"users\");\r\n  const [color, setColor] = useState(\"primary\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"render from useEffect\", \", type: \", type, \", color: \", color);\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"render from useEffect with type: \", type);\r\n  }, [type]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"render from useEffect with color: \", color);\r\n  }, [color]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow \" style={{ width: \"20rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4> Ресурс: {type}</h4>\r\n          <button onClick={() => setType(\"users\")} className=\"btn btn-outline-info mr-1\">\r\n            Пользователи\r\n          </button>\r\n          <button onClick={() => setType(\"todo\")} className=\"btn btn-outline-info mr-1\">\r\n            Todo\r\n          </button>\r\n          <button onClick={() => setType(\"posts\")} className=\"btn btn-outline-info\">\r\n            Посты\r\n          </button>\r\n\r\n          <h4>\r\n            Цвет: <span className={\"text-\" + color}>{color}</span>\r\n          </h4>\r\n          <button onClick={() => setColor(\"primary\")} className=\"btn btn-primary mr-1\">\r\n            Синий\r\n          </button>\r\n          <button onClick={() => setColor(\"success\")} className=\"btn btn-success mr-1\">\r\n            Зеленый\r\n          </button>\r\n          <button onClick={() => setColor(\"danger\")} className=\"btn btn-danger mr-1\">\r\n            Красный\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport const L02_03_FetchPlaceholder = () => {\r\n  const [type, setType] = useState(\"users\");\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/${type}`)\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json));\r\n  }, [type]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow \" style={{ width: \"90%\", maxHeight: \"500px\", overflow: \"auto\" }}>\r\n        <div className=\"card-body\">\r\n          <h4> Ресурс: {type}</h4>\r\n          <button onClick={() => setType(\"users\")} className=\"btn btn-outline-info mr-1\">\r\n            Пользователи\r\n          </button>\r\n          <button onClick={() => setType(\"todos\")} className=\"btn btn-outline-info mr-1\">\r\n            Todo\r\n          </button>\r\n          <button onClick={() => setType(\"posts\")} className=\"btn btn-outline-info\">\r\n            Посты\r\n          </button>\r\n          <pre>{JSON.stringify(data, null, 2)}</pre>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport IconsSVG from \"../common/IconsSVG\";\r\n\r\n\r\nexport const L02_04_DidMountUsers = ({ state = [], deleteElement = null }) => {\r\n  return (\r\n    <table className=\"table table-bordered table-hover \" style={{ marginTop: 10 }}>\r\n      <thead>\r\n        <tr className=\"table-secondary\">\r\n          <th scope=\"col\">id</th>\r\n          <th scope=\"col\">name</th>\r\n          <th scope=\"col\">username</th>\r\n          <th scope=\"col\">email</th>\r\n          <th scope=\"col\">address</th>\r\n          <th scope=\"col\">phone</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {state.map((row, key) => {\r\n          return (\r\n            <tr key={row.id}>\r\n              <th scope=\"row\" style={{ textAlign: \"center\" }}>\r\n                {row.id}\r\n                <a\r\n                  className=\"badge badge-outline-primary\"\r\n                  onClick={() => {\r\n                    deleteElement(state, key);\r\n                  }}\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"bottom\"\r\n                  title={`Удалить: id ${row.id}`}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <IconsSVG iconsID=\"bi-trash\" width=\"1em\" height=\"1em\" className={\"bi bi-trashi\"}/>\r\n                </a>\r\n              </th>\r\n              <td>{row.name}</td>\r\n              <td>{row.username}</td>\r\n              <td>{row.email}</td>\r\n              <td>{row.address.street + \",\" + row.address.suite + \",\" + row.address.city + \",\" + row.address.zipcode}</td>\r\n              <td>{row.phone}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { L02_04_DidMountUsers } from \"./L02_04_DidMountUsers\";\r\n\r\nexport const L02_04_DidMount = () => {\r\n  const [type, setType] = useState(\"users\");\r\n  const [users, setUsers] = useState([]);\r\n  const [todos, setTodos] = useState([]);\r\n  const [posts, setPosts] = useState([]);\r\n  const [total, setTotal] = useState({\r\n    users: 0,\r\n    todos: 0,\r\n    posts: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/users`)\r\n      .then((response) => response.json())\r\n      .then((json) => setUsers(json));\r\n\r\n    fetch(`https://jsonplaceholder.typicode.com/todos`)\r\n      .then((response) => response.json())\r\n      .then((json) => setTodos(json));\r\n\r\n    fetch(`https://jsonplaceholder.typicode.com/posts`)\r\n      .then((response) => response.json())\r\n      .then((json) => setPosts(json));\r\n  }, []);\r\n\r\n  useEffect(() => setTotal({ users: users.length, todos: todos.length, posts: posts.length }), [todos, posts, users]);\r\n\r\n  const curentStateResource = (type) => (type === \"users\" ? [users, setUsers] : type === \"todos\" ? [todos, setTodos] : type === \"posts\" ? [posts, setPosts] : [null, null]);\r\n\r\n  const deleteElement = (state, key = 0) => {\r\n    let temporary = [...state];\r\n    temporary.splice(key, 1);\r\n    curentStateResource(type)[1](temporary);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow \" style={{ width: \"90%\", height: \"500px\", overflow: \"auto\" }}>\r\n        <div className=\"card-body\">\r\n          <h4> Ресурс: {type}</h4>\r\n          <button onClick={() => setType(\"users\")} className=\"btn btn-outline-info mr-1\">\r\n            Пользователи, всего {total.users}\r\n          </button>\r\n          <button onClick={() => setType(\"todos\")} className=\"btn btn-outline-info mr-1\">\r\n            Todo, всего {total.todos}\r\n          </button>\r\n          <button onClick={() => setType(\"posts\")} className=\"btn btn-outline-info mr-5\">\r\n            Посты, всего {total.posts}\r\n          </button>\r\n          <button onClick={() => deleteElement(curentStateResource(type)[0], 0)} className=\"btn btn-outline-danger\" disabled={total[type] == 0 ? \"disabled\" : \"\"}>\r\n            Удалить первый элемент {type}, осталось {total[type]}.\r\n          </button>\r\n          {type == \"users\" ? <L02_04_DidMountUsers state={curentStateResource(type)[0]} setState={curentStateResource(type)[1]} deleteElement={deleteElement} /> : null}\r\n          {type == \"todos\" ? <pre>{JSON.stringify(curentStateResource(type)[0], null, 2)}</pre> : null}\r\n          {type == \"posts\" ? <pre>{JSON.stringify(curentStateResource(type)[0], null, 2)}</pre> : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nexport const L02_05_WillUnmount = () => {\r\n  const [data, setData] = useState({x: 0, y: 0});\r\n\r\n  const mouseMoveHandler = event => {\r\n    setData({x: event.clientX, y: event.clientY})\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"5. componentDidMount\")\r\n    window.addEventListener(\"mousemove\", mouseMoveHandler)\r\n    return () =>{\r\n      console.log(\"5. componentWillUnmount\")\r\n      window.removeEventListener(\"mousemove\", mouseMoveHandler)}\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow \" style={{width: \"30%\", height: \"180px\"}}>\r\n        <div className=\"card-body\">\r\n          <h4> Координаты курсора:</h4>\r\n          <pre>{JSON.stringify(data, null, 2)}</pre>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport {HeaderForExampl} from \"../common/HeaderForExampl\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\nimport СodeHowText from \"../common/СodeHowText\";\r\nimport {L02_01_baseUse} from \"./L02_01_baseUse\";\r\nimport {L02_02_secondArgument} from \"./L02_02_secondArgument\";\r\nimport {L02_03_FetchPlaceholder} from \"./L02_03_FetchPlaceholder\";\r\nimport {L02_04_DidMount} from \"./L02_04_DidMount\";\r\nimport {L02_05_WillUnmount} from \"./L02_05_WillUnmount\";\r\n\r\nexport const L02_listOfContent = () => {\r\n  const [seeExampl01, setSeeExampl01] = useState(false);\r\n  const [seeExampl02, setSeeExampl02] = useState(false);\r\n  const [seeExampl03, setSeeExampl03] = useState(false);\r\n  const [seeExampl04, setSeeExampl04] = useState(false);\r\n  const [seeExampl05, setSeeExampl05] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl01}\r\n        setSeeExampl={setSeeExampl01}\r\n        label=\"Первый пример. \"\r\n        labelAdd=\"Базовое использование useEffect.\"\r\n        WVLFSecond={1416}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson02/L02_01_baseUse.js\"\r\n      />\r\n      {seeExampl01 ? (\r\n        <>\r\n          <p>Чтобы увидеть результаты рендеринга откройте консоль браузера.</p>\r\n          <L02_01_baseUse/>\r\n          <p>\r\n            В функциональной компoненте использован хук useEffect:\r\n            <СodeHowText codeText={[`useEffect(() => {`, `  console.log(\"render from useEffect\");`, `});`]}/>\r\n            Обратите внимание, что рендер компоненты происходит только при смене названия ресурса.\r\n          </p>\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl02}\r\n        setSeeExampl={setSeeExampl02}\r\n        label=\"Второй пример. \"\r\n        labelAdd=\"Второй параметр хука useEffect\"\r\n        WVLFSecond={1661}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson02/L02_02_secondArgument.js\"\r\n      />\r\n      {seeExampl02 ? (\r\n        <>\r\n          <p>Чтобы увидеть результаты рендеринга откройте консоль браузера.</p>\r\n          <L02_02_secondArgument/>\r\n          <p>\r\n            По умолчанию эффекты запускаются после каждого завершённого рендера. :\r\n            <СodeHowText\r\n              codeText={[`useEffect(() => {`, `  \"render from useEffect\", \", type: \", type, \", color: \", color`, `});`]}/>\r\n            Обратите внимание, что рендер компоненты происходит только при смене названия ресурса или цвета.\r\n          </p>\r\n          <p>\r\n            В некоторых случаях это может быть излишним, чтобы реализовать это, передайте второй аргумент в useEffect,\r\n            который является массивом значений, от которых зависит эффект.\r\n            <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-reference.html#conditionally-firing-an-effect\"/>\r\n            <СodeHowText\r\n              codeText={[`useEffect(() => {`, `  console.log(\"render from useEffect with type: \", type);`, ` }, [type]);`]}/>\r\n          </p>\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl03}\r\n        setSeeExampl={setSeeExampl03}\r\n        label=\"Третий пример. \"\r\n        labelAdd=\"Делаем запрос на {JSON} Placeholder.\"\r\n        WVLFSecond={1738}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson02/L02_03_FetchPlaceholder.js\"\r\n      />\r\n      {seeExampl03 ? (\r\n        <>\r\n          <p>\r\n            Делаем запрос и получаем данные, в зависимости от выбранного ресурса.\r\n            <СodeHowText\r\n              codeText={[`useEffect(() => {`, \"  fetch(`https://jsonplaceholder.typicode.com/${type}`)\", ` .then((response) => response.json())`, ` .then((json) => setData(json));`, ` }, [type]);`]}/>\r\n            Данные запрашиваются каждый раз, когда меняется ресурс.\r\n          </p>\r\n          <L02_03_FetchPlaceholder/>\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl04}\r\n        setSeeExampl={setSeeExampl04}\r\n        label=\"Четвертый пример. \"\r\n        labelAdd=\"componentDidMount?\"\r\n        WVLFSecond={1949}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson02/L02_04_DidMount.js\"\r\n      />\r\n      {seeExampl04 ? (\r\n        <>\r\n          <p>\r\n            Если необходимо запустить эффект один раз (при монтировании), надо передать пустой массив ([ ]) вторым\r\n            аргументом.\r\n            <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-reference.html#conditionally-firing-an-effect\"/>\r\n            <СodeHowText\r\n              codeText={[`useEffect(() => {`, \"  fetch(`https://jsonplaceholder.typicode.com/users`)\", ` .then((response) => response.json())`, ` .then((json) => setUsers(json));`, ` }, [ ]);`]}/>\r\n          </p>\r\n          <L02_04_DidMount/>\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl05}\r\n        setSeeExampl={setSeeExampl05}\r\n        label=\"Пятый пример. \"\r\n        labelAdd=\"componentWillUnmount?\"\r\n        WVLFSecond={1995}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson02/L02_05_WillUnmount.js\"\r\n      />\r\n      {seeExampl05 ? (\r\n        <>\r\n          <p>\r\n            Часто эффекты создают ресурсы, которые необходимо очистить (или сбросить) перед тем, как компонент покидает\r\n            экран, например подписку или идентификатор таймера.\r\n            <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-reference.html#cleaning-up-an-effect\"/>\r\n            <СodeHowText\r\n              codeText={[`useEffect(() => {`, \"  window.addEventListener(\\\"mousemove\\\", event => {\", ` setData({x: event.clientX, y: event.clientY})`, ` })`, ` }, []);`]}/>\r\n          </p>\r\n          <L02_05_WillUnmount/>\r\n          <p>Чтобы сделать это, функция переданная в useEffect, может вернуть функцию очистки:\r\n            <СodeHowText\r\n              codeText={[`return () =>{`, `  console.log(\"5. componentWillUnmount\")`, ` window.removeEventListener(\"mousemove\", mouseMoveHandler)}`, ` }, []);`]}/>\r\n          </p>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\nimport СodeHowText from \"../common/СodeHowText\";\r\nimport WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\nimport { L02_listOfContent } from \"./L02_listOfContent\";\r\n\r\nexport default function Lesson02() {\r\n  return (\r\n    <>\r\n      <h2>\r\n        2. Один из основных хуков: useEffect.\r\n        <WatchVideoLessonFromSecond second={1400} />\r\n      </h2>\r\n      <p>\r\n        Мутации, подписки, таймеры, логирование и другие побочные эффекты не допускаются внутри основного тела функционального компонента (называемого этапом рендеринга React).\r\n        <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-reference.html#useeffect\" />\r\n        <br />\r\n        Функция, переданная в useEffect, будет запущена после того, как рендер будет зафиксирован на экране.\r\n        <СodeHowText codeText={[`useEffect(didUpdate);`]} />\r\n      </p>\r\n      <L02_listOfContent />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport const L03_01_useEffect = () => {\r\n  const [renderCount, setRenderCount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setRenderCount(prev => prev+1)\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow \" style={{ width: \"20rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4> Количество рендеров компоненты : {renderCount}</h4>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nlet renderCount = 1\r\n\r\nexport const L03_02_let = () => {\r\n  const [value, setValue] = useState(\"initial\")\r\n\r\n  useEffect(() => {\r\n    renderCount++\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow \" style={{ width: \"40rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4> Количество рендеров компоненты : {renderCount}</h4>\r\n          <input type=\"text\" value={value} onChange={e => setValue(e.target.value)}/>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\n\r\nexport const L03_03_useRef = () => {\r\n  const [value, setValue] = useState(\"initial\")\r\n\r\n  const renderCount = useRef(1);\r\n\r\n  useEffect(() => {\r\n    renderCount.current++\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow \" style={{ width: \"40rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4> Количество рендеров компоненты : {renderCount.current}</h4>\r\n          <input type=\"text\" value={value} onChange={e => setValue(e.target.value)}/>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\n\r\nexport const L03_04_reference = () => {\r\n  const [value, setValue] = useState(\"initial\")\r\n\r\n  const renderCount = useRef(1);\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    renderCount.current++\r\n    console.log(inputRef.current.value)\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow \" style={{width: \"40rem\"}}>\r\n        <div className=\"card-body\">\r\n          <h4> Количество рендеров компоненты : {renderCount.current}</h4>\r\n          <input ref={inputRef} type=\"text\" value={value} onChange={e => setValue(e.target.value)}/>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\n\r\nexport const L03_05_focus = () => {\r\n  const [value, setValue] = useState(\"initial\")\r\n\r\n  const renderCount = useRef(1);\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    renderCount.current++\r\n  });\r\n\r\n  const focus = () => inputRef.current.focus()\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow \" style={{width: \"40rem\"}}>\r\n        <div className=\"card-body\">\r\n          <h4> Количество рендеров компоненты : {renderCount.current}</h4>\r\n          <input ref={inputRef} type=\"text\" value={value} onChange={e => setValue(e.target.value)}/>\r\n          <button className=\"btn btn-success\" onClick={focus}>Фокус</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\n\r\nexport const L03_06_prevState = () => {\r\n  const [value, setValue] = useState(\"initial\")\r\n\r\n  const renderCount = useRef(1);\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  const prevValue = useRef(\"\")\r\n\r\n  useEffect(() => {\r\n    renderCount.current++\r\n  });\r\n\r\n  useEffect(() => prevValue.current = value,[value])\r\n\r\n  const focus = () => inputRef.current.focus()\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow \" style={{width: \"40rem\"}}>\r\n        <div className=\"card-body\">\r\n          <h4> Количество рендеров компоненты : {renderCount.current}</h4>\r\n          <h4>Прошлое состояние: {prevValue.current}</h4>\r\n          <input ref={inputRef} type=\"text\" value={value} onChange={e => setValue(e.target.value)}/>\r\n          <button className=\"btn btn-success\" onClick={focus}>Фокус</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport {HeaderForExampl} from \"../common/HeaderForExampl\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\nimport СodeHowText from \"../common/СodeHowText\";\r\nimport {L03_01_useEffect} from \"./L03_01_useEffect\";\r\nimport {L03_02_let} from \"./L03_02_let\";\r\nimport {L03_03_useRef} from \"./L03_03_useRef\";\r\nimport {L03_04_reference} from \"./L03_04_reference\";\r\nimport {L03_05_focus} from \"./L03_05_focus\";\r\nimport {L03_06_prevState} from \"./L03_06_prevState\";\r\n\r\nexport const L03_listOfContent = () => {\r\n  const [seeExampl01, setSeeExampl01] = useState(false);\r\n  const [seeExampl02, setSeeExampl02] = useState(false);\r\n  const [seeExampl03, setSeeExampl03] = useState(false);\r\n  const [seeExampl04, setSeeExampl04] = useState(false);\r\n  const [seeExampl05, setSeeExampl05] = useState(false);\r\n  const [seeExampl06, setSeeExampl06] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <h3>Есть задача: Посчитать, сколько раз рендерится компонента.</h3>\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl01}\r\n        setSeeExampl={setSeeExampl01}\r\n        label=\"Первый пример. \"\r\n        labelAdd=\"Используем useEffect.\"\r\n        WVLFSecond={2280}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson03/L03_01_useEffect.js\"\r\n      />\r\n      {seeExampl01 ? (\r\n        <>\r\n          <СodeHowText codeText={[`useEffect(() => {`, `  setRenderCount(prev => prev+1)`, `});`]}/>\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            <h4 className=\"alert-heading\">Внимание!</h4>\r\n            <p>Есть предупреждение. {`\"Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render\"`} </p>\r\n            <hr/>\r\n            <p className=\"mb-0\">\r\n              Чтобы увидеть предупреждение откройте консоль браузера.\r\n            </p>\r\n          </div>\r\n\r\n          <L03_01_useEffect/>\r\n          <p>\r\n            В примере получился бесконечный цикл, так как при изменении стейта происходит рендеринг компоненты.\r\n          </p>\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl02}\r\n        setSeeExampl={setSeeExampl02}\r\n        label=\"Второй пример. \"\r\n        labelAdd=\"Используем переменную вне компоненты.\"\r\n        WVLFSecond={2408}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson03/L03_02_let.js\"\r\n      />\r\n      {seeExampl02 ? (\r\n        <>\r\n          <СodeHowText codeText={[`let renderCount = 1`, `export const L03_02_let = () => {`]}/>\r\n          <L03_02_let/>\r\n          <p>Это не самое лучшее решение,в этом примере использована переменная вне жизненного цикла компоненты.  </p>\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl03}\r\n        setSeeExampl={setSeeExampl03}\r\n        label=\"Третий пример. \"\r\n        labelAdd=\"Используем useRef.\"\r\n        WVLFSecond={2518}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson03/L03_03_useRef.js\"\r\n      />\r\n      {seeExampl03 ? (\r\n        <>\r\n          <СodeHowText codeText={[`const renderCount = useRef(1);`]}/>\r\n          <L03_03_useRef/>\r\n          <p>С помощью свойства .current, можно обратиться к значению объекта:\r\n            <СodeHowText codeText={[`<h4> Количество рендеров компоненты : {renderCount.current}</h4>`]}/>\r\n          </p>\r\n          <p>Хук useRef() это общий контейнер, а его свойство current — изменяемое и может хранить любое значение, подобно свойству экземпляра класса.\r\n            <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-faq.html#is-there-something-like-instance-variables\"/>\r\n          </p>\r\n        </>\r\n      ) : null}\r\n\r\n      <h3>Есть задача: Менять фокус на странице.</h3>\r\n      <p>Рефы дают возможность получить доступ к DOM-узлам или React-элементам, созданным в рендер-методе.\r\n        <ReactjsOrg href=\"https://ru.reactjs.org/docs/refs-and-the-dom.html\"/>\r\n      </p>\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl04}\r\n        setSeeExampl={setSeeExampl04}\r\n        label=\"Четвертый пример. \"\r\n        labelAdd=\"Получаем ссылку на DOM элемент.\"\r\n        WVLFSecond={2628}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson03/L03_04_reference.js\"\r\n      />\r\n      {seeExampl04 ? (\r\n        <>\r\n          <p>Рефы прикрепляются к React-элементам через ref атрибут.\r\n            <СodeHowText codeText={[`<input ref={inputRef} type=\"text\" value={value} onChange={e => setValue(e.target.value)}/>`]}/>\r\n          </p>\r\n\r\n          <L03_04_reference/>\r\n          <p>Чтобы увидеть сообщение откройте консоль браузера.\r\n            <СodeHowText codeText={[`console.log(inputRef.current.value)`]}/>\r\n            Когда атрибут ref используется с HTML-элементом, свойство current созданного рефа в конструкторе с помощью React.createRef() получает соответствующий DOM-элемент.\r\n            <ReactjsOrg href=\"https://ru.reactjs.org/docs/refs-and-the-dom.html#accessing-refs\"/>\r\n          </p>\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl05}\r\n        setSeeExampl={setSeeExampl05}\r\n        label=\"Пятый пример. \"\r\n        labelAdd=\"Задаем фокус на элемент.\"\r\n        WVLFSecond={2708}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson03/L03_05_focus.js\"\r\n      />\r\n      {seeExampl05 ? (\r\n        <>\r\n          <СodeHowText codeText={[`const focus = () => inputRef.current.focus()`]}/>\r\n          <L03_05_focus/>\r\n        </>\r\n      ) : null}\r\n\r\n      <h3>Есть задача: Получить предыдущее значение состояния.</h3>\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl06}\r\n        setSeeExampl={setSeeExampl06}\r\n        label=\"Шестой пример. \"\r\n        labelAdd=\"Отображение предыдущего состояния\"\r\n        WVLFSecond={2773}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson03/L03_06_prevState.js\"\r\n      />\r\n      {seeExampl06 ? (\r\n        <>\r\n          <L03_06_prevState/>\r\n        </>\r\n      ) : null}\r\n\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\nimport СodeHowText from \"../common/СodeHowText\";\r\nimport WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\nimport {L03_listOfContent} from \"./L03_listOfContent\";\r\n\r\nexport default function Lesson03() {\r\n  return (\r\n    <>\r\n      <h2>\r\n        3. Хук useRef.\r\n        <WatchVideoLessonFromSecond second={2253} />\r\n      </h2>\r\n      <p>\r\n        useRef возвращает изменяемый ref-объект.\r\n        <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-reference.html#useref\" />\r\n        <СodeHowText codeText={[`const refContainer = useRef(initialValue);`]} />\r\n      </p>\r\n      <L03_listOfContent />\r\n\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nfunction complexCompute(num) {\r\n  console.log(\"complex compute ...\")\r\n  let i = 0\r\n  while(i < 1000000000) i++\r\n\r\n  return num * 2\r\n}\r\n\r\n\r\nfunction L04_01_42() {\r\n  const [number, setNumber] = useState(42);\r\n  const [colored, setColored] = useState(false)\r\n  const style = {\r\n    color: colored ? \"darkred\" : \"black\"\r\n  }\r\n\r\n  const computed = complexCompute(number)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow\" style={{ width: \"25.5rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4 style = {style}> Вычисляемое свойство: {computed}</h4>\r\n          <button onClick={() => setNumber(prev => prev + 1)} className=\"btn btn-primary mr-1\">\r\n            Добавить 2\r\n          </button>\r\n          <button onClick={() => setNumber(prev => prev - 1)} className=\"btn btn-success mr-3\">\r\n            Вычесть 2\r\n          </button>\r\n          <button onClick={() => setColored(prev => !prev)} className=\"btn btn-warning\">\r\n            Изменить цвет\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default L04_01_42;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nfunction complexCompute(num) {\r\n  console.log(\"complex compute ...\")\r\n  let i = 0\r\n  while(i < 1000000000) i++\r\n\r\n  return num * 2\r\n}\r\n\r\n\r\nfunction L04_02_useMemo() {\r\n  const [number, setNumber] = useState(42);\r\n  const [colored, setColored] = useState(false)\r\n  const style = {\r\n    color: colored ? \"darkred\" : \"black\"\r\n  }\r\n\r\n  const computed = useMemo(() => {return complexCompute(number)},[number])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow\" style={{ width: \"25.5rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4 style = {style}> Вычисляемое свойство: {computed}</h4>\r\n          <button onClick={() => setNumber(prev => prev + 1)} className=\"btn btn-primary mr-1\">\r\n            Добавить 2\r\n          </button>\r\n          <button onClick={() => setNumber(prev => prev - 1)} className=\"btn btn-success mr-3\">\r\n            Вычесть 2\r\n          </button>\r\n          <button onClick={() => setColored(prev => !prev)} className=\"btn btn-warning\">\r\n            Изменить цвет\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default L04_02_useMemo;\r\n","import React, { useState, useMemo, useEffect} from \"react\";\r\n\r\nfunction complexCompute(num) {\r\n  let i = 0\r\n  while(i < 100000000) i++\r\n\r\n  return num * 2\r\n}\r\n\r\n\r\nfunction L04_03_object() {\r\n  const [number, setNumber] = useState(42);\r\n  const [colored, setColored] = useState(false)\r\n  const styleColor = {\r\n    color: colored ? \"darkred\" : \"black\"\r\n  }\r\n\r\n  useEffect(()=>{\r\n    console.log(\"Changed object of styleColor.\")\r\n  },[styleColor])\r\n\r\n  const computed = useMemo(() => {return complexCompute(number)},[number])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow\" style={{ width: \"25.5rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4 style = {styleColor}> Вычисляемое свойство: {computed}</h4>\r\n          <button onClick={() => setNumber(prev => prev + 1)} className=\"btn btn-primary mr-1\">\r\n            Добавить 2\r\n          </button>\r\n          <button onClick={() => setNumber(prev => prev - 1)} className=\"btn btn-success mr-3\">\r\n            Вычесть 2\r\n          </button>\r\n          <button onClick={() => setColored(prev => !prev)} className=\"btn btn-warning\">\r\n            Изменить цвет\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default L04_03_object;\r\n","import React, { useState, useMemo, useEffect} from \"react\";\r\n\r\nfunction complexCompute(num) {\r\n  let i = 0\r\n  while(i < 100000000) i++\r\n\r\n  return num * 2\r\n}\r\n\r\n\r\nfunction L04_04_useMemoForObject() {\r\n  const [number, setNumber] = useState(42);\r\n  const [colored, setColored] = useState(false)\r\n\r\n  const styleColor = useMemo(()=>({color: colored ? \"darkred\" : \"black\"}),[colored])\r\n\r\n\r\n  useEffect(()=>{\r\n    console.log(\"Changed object of styleColor.\")\r\n  },[styleColor])\r\n\r\n  const computed = useMemo(() => {return complexCompute(number)},[number])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow\" style={{ width: \"25.5rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4 style = {styleColor}> Вычисляемое свойство: {computed}</h4>\r\n          <button onClick={() => setNumber(prev => prev + 1)} className=\"btn btn-primary mr-1\">\r\n            Добавить 2\r\n          </button>\r\n          <button onClick={() => setNumber(prev => prev - 1)} className=\"btn btn-success mr-3\">\r\n            Вычесть 2\r\n          </button>\r\n          <button onClick={() => setColored(prev => !prev)} className=\"btn btn-warning\">\r\n            Изменить цвет\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default L04_04_useMemoForObject;\r\n","import React, {useState} from \"react\";\r\nimport {HeaderForExampl} from \"../common/HeaderForExampl\";\r\nimport СodeHowText from \"../common/СodeHowText\";\r\nimport L04_01_42 from \"./L04_01_42\";\r\nimport L04_02_useMemo from \"./L04_02_useMemo\";\r\nimport L04_03_object from \"./L04_03_object\";\r\nimport WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\nimport L04_04_useMemoForObject from \"./L04_04_useMemoForObject\";\r\n\r\nexport const L04_listOfContent = () => {\r\n  const [seeExampl01, setSeeExampl01] = useState(false);\r\n  const [seeExampl02, setSeeExampl02] = useState(false);\r\n  const [seeExampl03, setSeeExampl03] = useState(false);\r\n  const [seeExampl04, setSeeExampl04] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <h3>Есть задача: Оптимизация производительности.</h3>\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl01}\r\n        setSeeExampl={setSeeExampl01}\r\n        label=\"Первый пример. \"\r\n        labelAdd=\"Не эффективный рендеринг.\"\r\n        WVLFSecond={2887}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson04/L04_01_42.js\"\r\n      />\r\n      {seeExampl01 ? (\r\n        <>\r\n          <p>Для расчета вычисляемого свойства используется долгий расчет.\r\n            <СodeHowText codeText={[`function complexCompute(num) {...`]}/>\r\n          </p>\r\n          <p>Чтобы увидеть результаты рендеринга откройте консоль браузера.</p>\r\n\r\n          <L04_01_42/>\r\n\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            <p className=\"mb-0\">\r\n              Расчет вычисляемого свойства происходит и при добавлении и вычитании, что опрадано. Также расчет\r\n              вычисляемого свойства происходит во время изменения цвета. Это уменьшает эффективность рендеринга\r\n              компоненты.\r\n            </p>\r\n          </div>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl02}\r\n        setSeeExampl={setSeeExampl02}\r\n        label=\"Второй пример. \"\r\n        labelAdd=\"Применяем useMemo.\"\r\n        WVLFSecond={3237}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson04/L04_02_useMemo.js\"\r\n      />\r\n      {seeExampl02 ? (\r\n        <>\r\n          <p>Расчет вычисляемого свойства обернули хуком useMemo. Вторым параметром передали зависимость расчета.\r\n            <СodeHowText codeText={[`const computed = useMemo(() => {return complexCompute(number)},[number])`]}/>\r\n          </p>\r\n          <p>Чтобы увидеть результаты рендеринга откройте консоль браузера.</p>\r\n\r\n          <L04_02_useMemo/>\r\n\r\n          <div className=\"alert alert-warning\" role=\"alert\">\r\n            <p className=\"mb-0\">\r\n              Расчет вычисляемого свойства происходит при добавлении и вычитании, что опрадано. Расчет\r\n              вычисляемого свойства не происходит во время изменения цвета, что лучше сказывается на эффективность\r\n              рендеринга\r\n              компоненты.\r\n            </p>\r\n          </div>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n      <h3>Есть задача: Оптимизация при работе с объектами.\r\n        <WatchVideoLessonFromSecond second={3338} />\r\n      </h3>\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl03}\r\n        setSeeExampl={setSeeExampl03}\r\n        label=\"Третий пример. \"\r\n        labelAdd=\"Проблема при работе с объектами.\"\r\n        WVLFSecond={3348}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson04/L04_03_object.js\"\r\n      />\r\n      {seeExampl03 ? (\r\n        <>\r\n          <p>Для отслеживания изменения цвета используется useEffect.\r\n            <СodeHowText codeText={[`useEffect(()=>{`,`console.log(\"Changed object of styleColor.\")`,`},[styleColor])`]}/>\r\n          </p>\r\n          <p>Чтобы увидеть результаты рендеринга откройте консоль браузера.</p>\r\n\r\n          <L04_03_object/>\r\n\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            <p className=\"mb-0\">\r\n              Сообщение про изменение объекта styleColor появляется при нажатии на любую кнопку. Это уменьшает эффективность рендеринга\r\n              компоненты.\r\n            </p>\r\n          </div>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl04}\r\n        setSeeExampl={setSeeExampl04}\r\n        label=\"Четвертый пример. \"\r\n        labelAdd=\"Применяем useMemo для объекта.\"\r\n        WVLFSecond={3475}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson04/L04_04_useMemoForObject.js\"\r\n      />\r\n      {seeExampl04 ? (\r\n        <>\r\n          <p>Создание объекта обернули хуком useMemo. Вторым параметром передали зависимость.\r\n            <СodeHowText codeText={[`const styleColor = useMemo(()=>({color: colored ? \"darkred\" : \"black\"}),[colored])`]}/>\r\n          </p>\r\n          <p>Чтобы увидеть результаты рендеринга откройте консоль браузера.</p>\r\n\r\n          <L04_04_useMemoForObject/>\r\n\r\n          <div className=\"alert alert-warning\" role=\"alert\">\r\n            <p className=\"mb-0\">\r\n              Теперь при добавлении и вычитании нет сообщения про изменение объекта styleColor\r\n              , что лучше сказывается на эффективность рендеринга компоненты.\r\n            </p>\r\n          </div>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\n// import СodeHowText from \"../common/СodeHowText\";\r\nimport WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\nimport {L04_listOfContent} from \"./L04_listOfContent\";\r\n\r\nexport default function Lesson04() {\r\n  return (\r\n    <>\r\n      <h2>\r\n        4. Хук useMemo.\r\n        <WatchVideoLessonFromSecond second={2887} />\r\n      </h2>\r\n      <p>\r\n        Возвращает мемоизированное значение.\r\n        <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-reference.html#usememo\" />\r\n      </p>\r\n      <L04_listOfContent />\r\n\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function L05_01_DynamicList_Items({ getItems = []}) {\r\n  const [items,setItems] = useState([])\r\n\r\n  useEffect(()=>{\r\n    const newItems = getItems()\r\n    setItems(newItems)\r\n\r\n    console.log(\"Render from DynamicList_Items\")\r\n  },[getItems])\r\n\r\n  return (\r\n    <ul>\r\n      {items.map( i => <li key={i}>{i}</li>)}\r\n    </ul>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport L05_01_DynamicList_Items from \"./L05_01_DynamicList_Items\";\r\n\r\nfunction L05_01_DynamicList() {\r\n  const [count, setCount] = useState(1);\r\n  const [colored, setColored] = useState(false)\r\n  const style = {\r\n    color: colored ? \"darkred\" : \"black\"\r\n  }\r\n\r\n  const generateItemsFromAPI = () => {\r\n    return new Array(count).fill(\"\").map((_, key) => `Элемент ${key + 1}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow\" style={{ width: \"25.5rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4 style = {style}> Количество элементов: {count}</h4>\r\n          <button onClick={() => setCount(prev => prev + 1)} className=\"btn btn-primary mr-1\">\r\n            Добавить элемент\r\n          </button>\r\n          <button onClick={() => setColored(prev => !prev)} className=\"btn btn-warning\">\r\n            Изменить цвет\r\n          </button>\r\n\r\n          <L05_01_DynamicList_Items getItems={generateItemsFromAPI} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default L05_01_DynamicList;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport L05_01_DynamicList_Items from \"./L05_01_DynamicList_Items\";\r\n\r\nfunction L05_01_DynamicList_useCallback() {\r\n  const [count, setCount] = useState(1);\r\n  const [colored, setColored] = useState(false)\r\n  const style = {\r\n    color: colored ? \"darkred\" : \"black\"\r\n  }\r\n\r\n  const generateItemsFromAPI = useCallback(() => {\r\n    return new Array(count).fill(\"\").map((_, key) => `Элемент ${key + 1}`)\r\n  },[count])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card bg-light mb-3 shadow\" style={{ width: \"25.5rem\" }}>\r\n        <div className=\"card-body\">\r\n          <h4 style = {style}> Количество элементов: {count}</h4>\r\n          <button onClick={() => setCount(prev => prev + 1)} className=\"btn btn-primary mr-1\">\r\n            Добавить элемент\r\n          </button>\r\n          <button onClick={() => setColored(prev => !prev)} className=\"btn btn-warning\">\r\n            Изменить цвет\r\n          </button>\r\n\r\n          <L05_01_DynamicList_Items getItems={generateItemsFromAPI} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default L05_01_DynamicList_useCallback;\r\n","import React, {useState} from \"react\";\r\nimport {HeaderForExampl} from \"../common/HeaderForExampl\";\r\nimport СodeHowText from \"../common/СodeHowText\";\r\n// import WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\nimport L05_01_DynamicList from \"./L05_01_DynamicList\";\r\nimport L05_01_DynamicList_useCallback from \"./L05_01_DynamicList_useCallback\";\r\n// import ReactjsOrg from \"../common/ReactjsOrg\";\r\n// import СodeHowText from \"../common/СodeHowText\";\r\n\r\nexport const L05_listOfContent = () => {\r\n  const [seeExampl01, setSeeExampl01] = useState(false);\r\n  const [seeExampl02, setSeeExampl02] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl01}\r\n        setSeeExampl={setSeeExampl01}\r\n        label=\"Первый пример. \"\r\n        labelAdd=\"Вывод динамического списка.\"\r\n        WVLFSecond={3590}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson05/L05_01_DynamicList.js\"\r\n      />\r\n      {seeExampl01 ? (\r\n        <>\r\n          <p>Для вывода динамического списка элементов используется callback функция\r\n            <СodeHowText codeText={[`const generateItemsFromAPI = () => {`, 'return new Array(count).fill(\"\").map((_, key) => `Элемент ${key + 1}`)', `}`]}/>\r\n          </p>\r\n          <p>Чтобы увидеть результаты рендеринга откройте консоль браузера.</p>\r\n\r\n          <L05_01_DynamicList/>\r\n\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            <p className=\"mb-0\">\r\n              Рендер элементов происходит при добавлении нового элемента, что правильно. Также рендер\r\n              элементов происходит во время изменения цвета. Это уменьшает общую эффективность рендеринга\r\n              компоненты.\r\n            </p>\r\n          </div>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl02}\r\n        setSeeExampl={setSeeExampl02}\r\n        label=\"Второй пример. \"\r\n        labelAdd=\"Применяем useCallback.\"\r\n        WVLFSecond={4045}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson05/L05_01_DynamicList_useCallback.js\"\r\n      />\r\n      {seeExampl02 ? (\r\n        <>\r\n          <p>Callback функцию обернули хуком useCallback. Вторым параметром передали зависимость.\r\n            <СodeHowText codeText={[`const generateItemsFromAPI = useCallback(() => {`, 'return new Array(count).fill(\"\").map((_, key) => `Элемент ${key + 1}`)', `},[count])`]}/>\r\n          </p>\r\n          <p>Чтобы увидеть результаты рендеринга откройте консоль браузера.</p>\r\n\r\n          <L05_01_DynamicList_useCallback/>\r\n\r\n          <div className=\"alert alert-warning\" role=\"alert\">\r\n            <p className=\"mb-0\">\r\n              Рендер элементов происходит при добавлении нового элемента, что правильно. Рендер\r\n              элементов не происходит во время изменения цвета. Это улучшает общую эффективность рендеринга\r\n              компоненты.\r\n            </p>\r\n          </div>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\n// import СodeHowText from \"../common/СodeHowText\";\r\nimport WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\nimport {L05_listOfContent} from \"./L05_listOfContent\";\r\n\r\nexport default function Lesson05() {\r\n  return (\r\n    <>\r\n      <h2>\r\n        5. Хук useCallback.\r\n        <WatchVideoLessonFromSecond second={3578} />\r\n      </h2>\r\n      <p>\r\n        Возвращает мемоизированный колбэк.\r\n        <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-reference.html#usecallback\" />\r\n      </p>\r\n      <L05_listOfContent />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport default function Main({toggle = null}) {\r\n\r\n  return (\r\n    <>\r\n      <h1>Привет в примере с Context</h1>\r\n      <button className=\"btn btn-success\" onClick={toggle}>Показать alert</button>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport {AlertContext} from \"./L06_01_useContextBase\";\r\n\r\nexport default function Alert() {\r\n  const alert = useContext(AlertContext)\r\n  if (!alert) return null\r\n\r\n  return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        <p className=\"mb-0\">\r\n          Это очень и очень важное сообщение!!!\r\n        </p>\r\n      </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Main from \"./Main\";\r\nimport Alert from \"./Alert\";\r\n\r\nexport const AlertContext = React.createContext()\r\n\r\nfunction L06_01_useContextBase() {\r\n  const [alert, setAlert] = useState(false)\r\n\r\n  const toggleAlert = () => setAlert(prev => !prev)\r\n\r\n  return (\r\n    <AlertContext.Provider value={alert} >\r\n      <div className=\"card bg-light mb-3 shadow\" style={{width: \"45rem\"}}>\r\n        <div className=\"card-body\">\r\n\r\n          <Alert/>\r\n          <Main toggle={toggleAlert}/>\r\n\r\n        </div>\r\n      </div>\r\n    </AlertContext.Provider>\r\n  )\r\n}\r\n\r\nexport default L06_01_useContextBase","import React, {useContext, useState} from \"react\";\r\n\r\n\r\nconst AlertContext = React.createContext()\r\nconst AlertTogleContext = React.createContext()\r\n\r\nexport const useAlert = () => {\r\n  return useContext(AlertContext)\r\n}\r\nexport const useAlertTogle = () => {\r\n  return useContext(AlertTogleContext)\r\n}\r\n\r\nexport const AlertProvider = ({ children=null }) => {\r\n  const [alert, setAlert] = useState(false)\r\n  const toggle = () => setAlert(prev => !prev)\r\n\r\n  return (\r\n    <AlertContext.Provider value={alert} >\r\n      <AlertTogleContext.Provider value={toggle} >\r\n        {children}\r\n      </AlertTogleContext.Provider>\r\n    </AlertContext.Provider>\r\n  )\r\n\r\n}","import React from \"react\";\r\nimport {useAlertTogle} from \"./alert/AlertContext\";\r\n\r\nexport default function Main() {\r\n\r\n  const toggle = useAlertTogle()\r\n\r\n  return (\r\n    <>\r\n      <h1>Привет в примере с Context</h1>\r\n      <button className=\"btn btn-success\" onClick={toggle}>Показать alert</button>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {useAlert} from \"./AlertContext\";\r\n\r\nexport default function Alert() {\r\n  const alert = useAlert()\r\n  if (!alert) return null\r\n\r\n  return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        <p className=\"mb-0\">\r\n          Это очень и очень важное сообщение!!!\r\n        </p>\r\n      </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport {AlertProvider} from \"./alert/AlertContext\";\r\nimport Main from \"./Main\";\r\nimport Alert from \"./alert/Alert\";\r\n\r\nfunction L06_02_useContextImproved() {\r\n\r\n  return (\r\n    <AlertProvider >\r\n      <div className=\"card bg-light mb-3 shadow\" style={{width: \"45rem\"}}>\r\n        <div className=\"card-body\">\r\n          <Alert/>\r\n          <Main/>\r\n        </div>\r\n      </div>\r\n    </AlertProvider>\r\n  )\r\n}\r\n\r\nexport default L06_02_useContextImproved","import React, {useContext, useState} from \"react\";\r\n\r\n\r\nconst AlertContext = React.createContext()\r\n\r\nexport const useAlert = () => {\r\n  return useContext(AlertContext)\r\n}\r\n\r\nexport const AlertProvider = ({ children=null }) => {\r\n  const [alert, setAlert] = useState(false)\r\n  const toggle = () => setAlert(prev => !prev)\r\n\r\n  return (\r\n    <AlertContext.Provider value={{\r\n      visible: alert,\r\n      toggle\r\n    }} >\r\n        {children}\r\n    </AlertContext.Provider>\r\n  )\r\n\r\n}","import React from \"react\";\r\nimport {useAlert} from \"./alert/AlertContext\";\r\n\r\nexport default function Main() {\r\n\r\n  const {toggle} = useAlert()\r\n\r\n  return (\r\n    <>\r\n      <h1>Привет в примере с Context</h1>\r\n      <button className=\"btn btn-success\" onClick={toggle}>Показать alert</button>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {useAlert} from \"./AlertContext\";\r\n\r\nexport default function Alert() {\r\n  const alert = useAlert()\r\n  if (!alert.visible) return null\r\n\r\n  return (\r\n      <div className=\"alert alert-danger\" role=\"alert\" onClick={alert.toggle} style={{ cursor: \"pointer\"}}>\r\n        <p className=\"mb-0\">\r\n          Это очень и очень важное сообщение!!!\r\n        </p>\r\n      </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport {AlertProvider} from \"./alert/AlertContext\";\r\nimport Main from \"./Main\";\r\nimport Alert from \"./alert/Alert\";\r\n\r\nexport default function L06_03_useContextObject() {\r\n\r\n  return (\r\n    <AlertProvider >\r\n      <div className=\"card bg-light mb-3 shadow\" style={{width: \"45rem\"}}>\r\n        <div className=\"card-body\">\r\n          <Alert/>\r\n          <Main/>\r\n        </div>\r\n      </div>\r\n    </AlertProvider>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {HeaderForExampl} from \"../common/HeaderForExampl\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\nimport CodeHowText from \"../common/СodeHowText\";\r\nimport GitHubFile from \"../common/GitHubFile\";\r\nimport L06_01_useContextBase from \"./L06_01_useContextBase/L06_01_useContextBase\";\r\nimport L06_02_useContextImproved from \"./L06_02_useContextImproved/L06_02_useContextImproved\";\r\nimport L06_03_useContextObject from \"./L06_03_useContextObject/L06_03_useContextObject\";\r\n// import WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\n\r\nexport const L06_listOfContent = () => {\r\n  const [seeExampl01, setSeeExampl01] = useState(false);\r\n  const [seeExampl02, setSeeExampl02] = useState(false);\r\n  const [seeExampl03, setSeeExampl03] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl01}\r\n        setSeeExampl={setSeeExampl01}\r\n        label=\"Первый пример. \"\r\n        labelAdd=\"Базовое применение.\"\r\n        WVLFSecond={4209}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson06/L06_01_useContextBase/L06_01_useContextBase.js\"\r\n      />\r\n      {seeExampl01 ? (\r\n        <>\r\n          <p>Создаём объект Context.\r\n            <ReactjsOrg href=\"https://ru.reactjs.org/docs/context.html#reactcreatecontext\"/>\r\n            <CodeHowText codeText={[`export const AlertContext = React.createContext()`]}/>\r\n            Каждый объект Context используется вместе с Provider компонентом\r\n            <ReactjsOrg href=\"https://ru.reactjs.org/docs/context.html#contextprovider\"/>,\r\n            <CodeHowText codeText={[`<AlertContext.Provider value={alert} >`]}/>\r\n            который позволяет дочерним компонентам, использующим этот контекст, подписаться на его изменения.\r\n            <CodeHowText codeText={[`const alert = useContext(AlertContext)`]}/>\r\n          </p>\r\n\r\n          <L06_01_useContextBase/>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl02}\r\n        setSeeExampl={setSeeExampl02}\r\n        label=\"Второй пример. \"\r\n        labelAdd=\"Пример улучшенного применения.\"\r\n        WVLFSecond={4687}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson06/L06_02_useContextImproved/L06_02_useContextImproved.js\"\r\n      />\r\n      {seeExampl02 ? (\r\n        <>\r\n          <p>Всю логику работы с context и state выносим в отдельный файл.\r\n            <GitHubFile href=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson06/L06_02_useContextImproved/alert/AlertContext.js\" />\r\n          </p>\r\n          <L06_02_useContextImproved/>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl03}\r\n        setSeeExampl={setSeeExampl03}\r\n        label=\"Третий пример. \"\r\n        labelAdd=\"Используем объект.\"\r\n        WVLFSecond={5123}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson06/L06_03_useContextObject/L06_03_useContextObject.js\"\r\n      />\r\n      {seeExampl03 ? (\r\n        <>\r\n          <p>Экспортируем в провайдере объект\r\n            <GitHubFile href=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson06/L06_03_useContextObject/alert/AlertContext.js\"/>\r\n            :\r\n            <CodeHowText codeText={[`<AlertContext.Provider value={{`, `  visible: alert,`, `  toggle`, `}} >`]}/>\r\n          </p>\r\n          <L06_03_useContextObject/>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\n// import СodeHowText from \"../common/СodeHowText\";\r\nimport WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\nimport {L06_listOfContent} from \"./L06_listOfContent\";\r\n\r\nexport default function Lesson06() {\r\n  return (\r\n    <>\r\n      <h2>\r\n        6. Хук useContext.\r\n        <WatchVideoLessonFromSecond second={4203} />\r\n      </h2>\r\n      <p>\r\n        Принимает объект контекста (значение, возвращённое из React.createContext) и возвращает текущее значение\r\n        контекста для этого контекста. Текущее значение контекста определяется пропом value\r\n        ближайшего MyContext.Provider над вызывающим компонентом в дереве.\r\n        <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-reference.html#usecontext\"/>\r\n      </p>\r\n      <L06_listOfContent />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n","import React, {useContext, useReducer} from \"react\";\r\n\r\n\r\nconst AlertContext = React.createContext()\r\n\r\nexport const useAlert = () => {\r\n  return useContext(AlertContext)\r\n}\r\n\r\nconst SHOW_ALERT = \"show\"\r\nconst HIDE_ALERT = \"hide\"\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case SHOW_ALERT: return {...state, visible: true, text: action.text}\r\n    case HIDE_ALERT: return {...state, visible: false}\r\n\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport const AlertProvider = ({ children=null }) => {\r\n\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    visible: false,\r\n    text: ''\r\n  })\r\n\r\n  const show = (text) => dispatch({type: SHOW_ALERT , text})\r\n  const hide = () => dispatch({type: HIDE_ALERT})\r\n\r\n  return (\r\n    <AlertContext.Provider value={{\r\n      visible: state.visible,\r\n      text: state.text,\r\n      show,\r\n      hide\r\n    }} >\r\n        {children}\r\n    </AlertContext.Provider>\r\n  )\r\n\r\n}","import React from \"react\";\r\nimport {useAlert} from \"./alert/AlertContext\";\r\n\r\nexport default function Main() {\r\n\r\n  const {show, hide, visible} = useAlert()\r\n\r\n  return (\r\n    <>\r\n      <h1>Привет в примере с Context</h1>\r\n      <button className=\"btn btn-success  mr-1\" onClick={()=> show(\"Это текст из main.js\")} disabled={visible? \"disabled\" : \"\"}>Показать alert</button>\r\n      <button className=\"btn btn-warning\" onClick={()=> hide()} disabled={!visible? \"disabled\" : \"\"}>Убрать alert</button>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {useAlert} from \"./AlertContext\";\r\n\r\nexport default function Alert() {\r\n  const alert = useAlert()\r\n  if (!alert.visible) return null\r\n\r\n  return (\r\n      <div className=\"alert alert-danger\" role=\"alert\" onClick={alert.hide} style={{ cursor: \"pointer\"}}>\r\n        <p className=\"mb-0\">\r\n          {alert.text}\r\n        </p>\r\n      </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport {AlertProvider} from \"./alert/AlertContext\";\r\nimport Main from \"./Main\";\r\nimport Alert from \"./alert/Alert\";\r\n\r\nexport default function L07_01_useReducer() {\r\n\r\n  return (\r\n    <AlertProvider >\r\n      <div className=\"card bg-light mb-3 shadow\" style={{width: \"45rem\"}}>\r\n        <div className=\"card-body\">\r\n          <Alert/>\r\n          <Main/>\r\n        </div>\r\n      </div>\r\n    </AlertProvider>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {HeaderForExampl} from \"../common/HeaderForExampl\";\r\nimport L07_01_useReducer from \"./L07_01_useReducer/L07_01_useReducer\";\r\n// import ReactjsOrg from \"../common/ReactjsOrg\";\r\n// import CodeHowText from \"../common/СodeHowText\";\r\n// import GitHubFile from \"../common/GitHubFile\";\r\n// import WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\n\r\nexport const L07_listOfContent = () => {\r\n  const [seeExampl01, setSeeExampl01] = useState(false);\r\n\r\n  return (\r\n    <>\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl01}\r\n        setSeeExampl={setSeeExampl01}\r\n        label=\"Первый пример. \"\r\n        labelAdd=\"Базовое использование.\"\r\n        WVLFSecond={5216}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson07/L07_01_useReducer/alert/AlertContext.js\"\r\n      />\r\n      {seeExampl01 ? (\r\n        <>\r\n          <L07_01_useReducer/>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\n// import СodeHowText from \"../common/СodeHowText\";\r\nimport WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\nimport { L07_listOfContent } from \"./L07_listOfContent\";\r\nimport CodeHowText from \"../common/СodeHowText\";\r\n\r\nexport default function Lesson07() {\r\n  return (\r\n    <>\r\n      <h2>\r\n        7. Хук useReducer.\r\n        <WatchVideoLessonFromSecond second={5216} />\r\n      </h2>\r\n      <p>\r\n        Альтернатива для useState. Принимает редюсер типа (state, action) {\"=>\"} newState и возвращает текущее состояние в\r\n        паре с методом dispatch. (Если вы знакомы с Redux, вы уже знаете, как это работает.)\r\n        <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-reference.html#usereducer\"/>\r\n        <CodeHowText codeText={[`const [state, dispatch] = useReducer(reducer, initialArg, init);`]}/>\r\n      </p>\r\n      <L07_listOfContent />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\n\r\n\r\nexport default function L08_01_Direction() {\r\n  const [name, setName] = useState(\"\")\r\n  const [lastName, setlastName] = useState(\"\")\r\n\r\n\r\n  const handlerName = event => {\r\n    setName(event.target.value)\r\n  }\r\n\r\n  const handlerlastName = event => {\r\n    setlastName(event.target.value)\r\n  }\r\n\r\n  return (\r\n      <div className=\"card bg-light mb-3 shadow\" style={{width: \"45rem\"}}>\r\n        <div className=\"card-body\">\r\n          <input type=\"text\" value={name} placeholder=\"Name\" onChange={handlerName} className=\"mr-1\"/>\r\n          <input type=\"text\" value={lastName} placeholder=\"LastName\" onChange={handlerlastName}/>\r\n          <hr/>\r\n          <h1>Имя: <em>{name} {lastName}</em></h1>\r\n\r\n        </div>\r\n      </div>\r\n  )\r\n\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction useLogger(value , title) {\r\n  useEffect(() => {\r\n    console.log(`Значение ${title} изменилось на: ${value}`)\r\n  },[value])\r\n}\r\n\r\nexport default function L08_02_MyHookLogger() {\r\n  const [name, setName] = useState(\"\")\r\n  const [lastName, setlastName] = useState(\"\")\r\n\r\n  useLogger(name, \"name\")\r\n  useLogger(lastName, \"lastName\")\r\n\r\n\r\n  const handlerName = event => {\r\n    setName(event.target.value)\r\n  }\r\n\r\n  const handlerlastName = event => {\r\n    setlastName(event.target.value)\r\n  }\r\n\r\n  return (\r\n      <div className=\"card bg-light mb-3 shadow\" style={{width: \"45rem\"}}>\r\n        <div className=\"card-body\">\r\n          <input type=\"text\" value={name} placeholder=\"Name\" onChange={handlerName} className=\"mr-1\"/>\r\n          <input type=\"text\" value={lastName} placeholder=\"LastName\" onChange={handlerlastName}/>\r\n          <hr/>\r\n          <h1>Имя: <em>{name} {lastName}</em></h1>\r\n\r\n        </div>\r\n      </div>\r\n  )\r\n\r\n}","import React, { useState } from \"react\";\r\n\r\n\r\nfunction useInput(initialValue) {\r\n  const [value, setValue] = useState(initialValue)\r\n  const onChange = event => {\r\n    setValue(event.target.value)\r\n  }\r\n  return {\r\n    value, onChange\r\n  }\r\n}\r\n\r\nexport default function L08_03_MyHookInput() {\r\n  const name = useInput(\"\")\r\n  const lastName = useInput(\"\")\r\n\r\n  return (\r\n      <div className=\"card bg-light mb-3 shadow\" style={{width: \"45rem\"}}>\r\n        <div className=\"card-body\">\r\n          <input type=\"text\" value={name.value} placeholder=\"Name\" onChange={name.onChange} className=\"mr-1\"/>\r\n          <input type=\"text\" {...lastName} placeholder=\"LastName\" />\r\n          <hr/>\r\n          <h1>Имя: <em>{name.value} {lastName.value}</em></h1>\r\n\r\n        </div>\r\n      </div>\r\n  )\r\n\r\n}","import React, { useState } from \"react\";\r\n\r\n\r\nfunction useInput(initialValue) {\r\n  const [value, setValue] = useState(initialValue)\r\n  const onChange = event => {\r\n    setValue(event.target.value)\r\n  }\r\n  const clear = () => setValue(\"\")\r\n\r\n  return {\r\n    bind: {value, onChange},\r\n    value,\r\n    clear\r\n  }\r\n}\r\n\r\nexport default function L08_04_MyHookClear() {\r\n  const name = useInput(\"\")\r\n  const lastName = useInput(\"\")\r\n\r\n  return (\r\n    <div className=\"card bg-light mb-3 shadow\" style={{width: \"45rem\"}}>\r\n      <div className=\"card-body\">\r\n        <input type=\"text\" {...name.bind} placeholder=\"Name\" className=\"mr-1\"/>\r\n        <input type=\"text\" {...lastName.bind} placeholder=\"LastName\"/>\r\n        <hr/>\r\n        <button className=\"btn btn-success mr-1\" onClick={name.clear}>Очистить name</button>\r\n        <button className=\"btn btn-success mr-2\" onClick={lastName.clear}>Очистить lastName</button>\r\n        <button className=\"btn btn-warning\" onClick={() => {\r\n          name.clear()\r\n          lastName.clear()\r\n        }}>Очистить имя\r\n        </button>\r\n        <hr/>\r\n        <h1>Имя: <em>{name.value} {lastName.value}</em></h1>\r\n\r\n      </div>\r\n      </div>\r\n  )\r\n\r\n}","import React, { useState } from \"react\";\r\nimport {HeaderForExampl} from \"../common/HeaderForExampl\";\r\nimport CodeHowText from \"../common/СodeHowText\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\nimport L08_01_Direction from \"./L08_01_Direction\";\r\nimport L08_02_MyHookLogger from \"./L08_02_MyHookLogger\";\r\nimport L08_03_MyHookInput from \"./L08_03_MyHookInput\";\r\nimport L08_04_MyHookClear from \"./L08_04_MyHookClear\";\r\n\r\nexport const L08_listOfContent = () => {\r\n  const [seeExampl01, setSeeExampl01] = useState(false);\r\n  const [seeExampl02, setSeeExampl02] = useState(false);\r\n  const [seeExampl03, setSeeExampl03] = useState(false);\r\n  const [seeExampl04, setSeeExampl04] = useState(false);\r\n\r\n  return (\r\n    <>\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl01}\r\n        setSeeExampl={setSeeExampl01}\r\n        label=\"Первый пример. \"\r\n        labelAdd=\"Дублирование кода\"\r\n        WVLFSecond={5689}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson08/L08_01_Direction.js\"\r\n      />\r\n      {seeExampl01 ? (\r\n        <>\r\n          <p>При использовании нескольких полей ввода данных:\r\n            <CodeHowText codeText={[`<input type=\"text\" value={name} placeholder=\"Name\" onChange={handlerName} className=\"mr-1\"/>`, `<input type=\"text\" value={lastName} placeholder=\"LastName\" onChange={handlerlastName}/>`]}/>\r\n            Часто используется дублирование кода:\r\n            <CodeHowText codeText={[`const handlerName = event => {`, `  setName(event.target.value)}`,`const handlerlastName = event => {`, `  setlastName(event.target.value)}`]}/>\r\n          </p>\r\n\r\n          <L08_01_Direction/>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl02}\r\n        setSeeExampl={setSeeExampl02}\r\n        label=\"Второй пример. \"\r\n        labelAdd=\"Хук для слежения.\"\r\n        WVLFSecond={5871}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson08/L08_02_MyHookLogger.js\"\r\n      />\r\n      {seeExampl02 ? (\r\n        <>\r\n          <p>Создаим свой хук для слежения изменнеия состояния. Для этого внутри своего хука будем использовать\r\n            useEffect:\r\n            <CodeHowText\r\n              codeText={[`function useLogger(value , title) {`, `  useEffect(() => {`, \"  console.log(`Значение ${title} изменилось на: ${value}`)\", `},[value])}`]}/>\r\n          </p>\r\n          <p>Чтобы увидеть результаты изменнеия состояния откройте консоль браузера.</p>\r\n          <L08_02_MyHookLogger/>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl03}\r\n        setSeeExampl={setSeeExampl03}\r\n        label=\"Третий пример. \"\r\n        labelAdd=\"Оптимизация кода\"\r\n        WVLFSecond={5950}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson08/L08_03_MyHookInput.js\"\r\n      />\r\n      {seeExampl03 ? (\r\n        <>\r\n          <p>Создадим свой хук для оптимизации кода input:\r\n            <CodeHowText\r\n              codeText={[`function useInput(initialValue) {`,\r\n                `  const [value, setValue] = useState(initialValue)`,\r\n                `  const onChange = event => {`,\r\n                `    setValue(event.target.value)`,\r\n                '    }',\r\n                '  return {',\r\n                '    value, onChange',\r\n                '    }',\r\n                '}']}/>\r\n            Применяем в компоненте:\r\n            <CodeHowText\r\n              codeText={[`const name = useInput(\"\")`, `const lastName = useInput(\"\")`, \"...\",\r\n                         '<input type=\"text\" value={name.value} placeholder=\"Name\" onChange={name.onChange} className=\"mr-1\"/>',\r\n                         '<input type=\"text\" {...lastName} placeholder=\"LastName\" />']}/>\r\n\r\n          </p>\r\n          <p>Обратите внимание, что во втором input используется {'{...lastName}'} вместо {'value={lastName.value} onChange={lastName.onChange}'}.</p>\r\n          <L08_03_MyHookInput/>\r\n          <p>Пользовательские хуки — это механизм повторного использования логики с состоянием (например, установка подписки и сохранение текущего значения), но каждый раз, когда вы используете пользовательский хук, всё состояние и эффекты внутри него полностью изолированы.\r\n            <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-custom.html#using-a-custom-hook\"/>\r\n          </p>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n\r\n      <HeaderForExampl\r\n        seeExampl={seeExampl04}\r\n        setSeeExampl={setSeeExampl04}\r\n        label=\"Четвертый пример. \"\r\n        labelAdd=\"Применение.\"\r\n        WVLFSecond={6160}\r\n        GHFile=\"https://github.com/AVL68/react_hooks_compendium/blob/master/src/Lesson08/L08_04_MyHookClear.js\"\r\n      />\r\n      {seeExampl04 ? (\r\n        <>\r\n          <p>Нам нужно иметь возможность очищать поля input. Просто добавляем дополнительный функционал:\r\n            <CodeHowText codeText={[`const clear = () => setValue(\"\")`]}/>\r\n\r\n            Применяем в компоненте:\r\n            <CodeHowText\r\n              codeText={[`<button className=\"btn btn-success mr-1\" onClick={name.clear}>Очистить name</button>`, \"...\"]}/>\r\n\r\n          </p>\r\n          <p>Обратите внимание, что во втором input используется {'{...lastName}'} вместо {'value={lastName.value} onChange={lastName.onChange}'}.</p>\r\n          <L08_04_MyHookClear/>\r\n\r\n        </>\r\n      ) : null}\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactjsOrg from \"../common/ReactjsOrg\";\r\nimport WatchVideoLessonFromSecond from \"../common/WatchVideoLessonFromSecond\";\r\nimport {L08_listOfContent} from \"./L08_listOfContent\";\r\n// import CodeHowText from \"../common/СodeHowText\";\r\n\r\nexport default function Lesson08() {\r\n  return (\r\n    <>\r\n      <h2>\r\n        8. Создание пользовательских хуков.\r\n        <WatchVideoLessonFromSecond second={5658} />\r\n      </h2>\r\n      <p>\r\n        Создание пользовательских хуков позволяет перенести логику компонентов в функции, которые можно повторно использовать.\r\n        <ReactjsOrg href=\"https://ru.reactjs.org/docs/hooks-custom.html\"/>\r\n      </p>\r\n      <p>Пользовательский хук — это JavaScript-функция, имя которой начинается с «use», и которая может вызывать другие хуки</p>\r\n      <L08_listOfContent />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\nimport Intro from \"./Lesson00/Intro\";\nimport Lesson01 from \"./Lesson01/Lesson01\";\nimport Lesson02 from \"./Lesson02/Lesson02\";\nimport Lesson03 from \"./Lesson03/Lesson03\";\nimport Lesson04 from \"./Lesson04/Lesson04\";\nimport Lesson05 from \"./Lesson05/Lesson05\";\nimport Lesson06 from \"./Lesson06/Lesson06\";\nimport Lesson07 from \"./Lesson07/Lesson07\";\nimport Lesson08 from \"./Lesson08/Lesson08\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Intro />\n      <Lesson01 />\n      <Lesson02 />\n      <Lesson03 />\n      <Lesson04 />\n      <Lesson05 />\n      <Lesson06 />\n      <Lesson07 />\n      <Lesson08 />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}